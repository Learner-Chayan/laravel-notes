***
.........................
Route::get('/', function () {
    return view('welcome', ['name' => 'Samantha']);
});

Receiving name into blade : {{$name}}



*** 
.........................
By default, Blade {{ }} statements are automatically sent through PHP's htmlspecialchars
 function to prevent XSS attacks. If you do not want your data to be escaped,
 you may use the following syntax:

 Hello, {!! $name !!}.


 *** Blade and JS frame works
 .........................
 Since many JavaScript frameworks also use "curly" braces to indicate a given expression
  should be displayed in the browser, you may use the @ symbol to inform the Blade rendering engine an expression should remain
  untouched. For example:

   
Hello, @{{ name }}.



*** If Statement [IF]
.........................
@if (count($records) === 1)
    I have one record!
@elseif (count($records) > 1)
    I have multiple records!
@else
    I don't have any records!
@endif


***isset 
.........................
@isset($records)
    // $records is defined and is not null...
@endisset



***Switch
.........................

@switch($i)
    @case(1)
        First case...
        @break
 
    @case(2)
        Second case...
        @break
 
    @default
        Default case...
@endswitch



***Loops 
.........................
@for ($i = 0; $i < 10; $i++)
    The current value is {{ $i }}
@endfor
 
@foreach ($users as $user)
    <p>This is user {{ $user->id }}</p>
@endforeach
 
@forelse ($users as $user)
    <li>{{ $user->name }}</li>
@empty
    <p>No users</p>
@endforelse
 
@while (true)
    <p>I'm looping forever.</p>
@endwhile



***loop variable 
.........................
@foreach ($users as $user)
    @if ($loop->first)
        This is the first iteration.
    @endif
 
    @if ($loop->last)
        This is the last iteration.
    @endif
 
    <p>This is user {{ $user->id }}</p>
@endforeach

Property	Description
$loop->index	The index of the current loop iteration (starts at 0).
$loop->iteration	The current loop iteration (starts at 1).
$loop->remaining	The iterations remaining in the loop.
$loop->count	The total number of items in the array being iterated.
$loop->first	Whether this is the first iteration through the loop.
$loop->last	Whether this is the last iteration through the loop.
$loop->even	Whether this is an even iteration through the loop.
$loop->odd	Whether this is an odd iteration through the loop.
$loop->depth	The nesting level of the current loop.
$loop->parent	When in a nested loop, the parent's loop variable.




***Conditional Classes 
.........................
@php
    $isActive = false;
    $hasError = true;
@endphp
 
<span @class([
    'p-4',
    'font-bold' => $isActive,
    'text-gray-500' => ! $isActive,
    'bg-red' => $hasError,
])></span>
 
<span class="p-4 text-gray-500 bg-red"></span>


*** Checked / Selected / Disabled
.................................
<input type="checkbox"
        name="active"
        value="active"
        @checked(old('active', $user->active)) />


<select name="version">
    @foreach ($product->versions as $version)
        <option value="{{ $version }}" @selected(old('version') == $version)>
            {{ $version }}
        </option>
    @endforeach
</select>

<button type="submit" @disabled($errors->isNotEmpty())>Submit</button>]


***Including Subviews
......................
<div>
    @include('shared.errors')
 
    <form>
        <!-- Form Contents -->
    </form>
</div>

@include('view.name', ['status' => 'complete'])
@includeIf('view.name', ['status' => 'complete'])
@includeWhen($boolean, 'view.name', ['status' => 'complete'])
@includeUnless($boolean, 'view.name', ['status' => 'complete'])



*** The @once Directive
note : will load file once 
.......................
@once
    @push('scripts')
        <script>
            // Your custom JavaScript...
        </script>
    @endpush
@endonce

@pushOnce('scripts')
    <script>
        // Your custom JavaScript...
    </script>
@endPushOnce


*** Raw PHP 
...........
@php
    $counter = 1;
@endphp


*** Comments 
..............
{{-- This comment will not be present in the rendered HTML --}}